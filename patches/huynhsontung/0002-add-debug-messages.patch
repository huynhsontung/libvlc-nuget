From 17992fd1965af72ce4d3261ca0718afb7f0431ba Mon Sep 17 00:00:00 2001
From: Tung Huynh <tung75605@gmail.com>
Date: Tue, 6 May 2025 00:04:01 -0700
Subject: [PATCH 2/3] add debug messages

---
 modules/video_chroma/d3d11_fmt.c            | 4 ++++
 modules/video_output/win32/d3d11_scaler.cpp | 7 +++++++
 2 files changed, 11 insertions(+)

diff --git a/modules/video_chroma/d3d11_fmt.c b/modules/video_chroma/d3d11_fmt.c
index b828ea9387..779f674aa5 100644
--- a/modules/video_chroma/d3d11_fmt.c
+++ b/modules/video_chroma/d3d11_fmt.c
@@ -250,6 +250,7 @@ void D3D11_GetDriverVersion(vlc_object_t *obj, d3d11_device_t *d3d_dev)
     LARGE_INTEGER driver = { 0 };
     HRESULT hr;
     IDXGIAdapter *pAdapter = D3D11DeviceAdapter(d3d_dev->d3ddevice);
+    msg_Dbg(obj, "IDXGIAdapter_CheckInterfaceSupport");
     hr = IDXGIAdapter_CheckInterfaceSupport(pAdapter, &IID_IDXGIDevice, &driver);
 
     if (FAILED(hr))
@@ -270,6 +271,9 @@ void D3D11_GetDriverVersion(vlc_object_t *obj, d3d11_device_t *d3d_dev)
         d3d_dev->WDDM.d3d_features = LOWORD(driver.LowPart);
         d3d_dev->WDDM.revision     = HIWORD(driver.LowPart);
         d3d_dev->WDDM.build        = LOWORD(driver.LowPart);
+        msg_Dbg(obj, "%s WDDM driver %d.%d.%d.%d", DxgiVendorStr(d3d_dev->adapterDesc.VendorId),
+                d3d_dev->WDDM.wddm, d3d_dev->WDDM.d3d_features,
+                d3d_dev->WDDM.revision, d3d_dev->WDDM.build);
     }
 }
 
diff --git a/modules/video_output/win32/d3d11_scaler.cpp b/modules/video_output/win32/d3d11_scaler.cpp
index 6db9dc1a5f..d0b3227a78 100644
--- a/modules/video_output/win32/d3d11_scaler.cpp
+++ b/modules/video_output/win32/d3d11_scaler.cpp
@@ -73,10 +73,12 @@ d3d11_scaler *D3D11_UpscalerCreate(vlc_object_t *vd, d3d11_device_t *d3d_dev, vl
 #endif
     if (super_res)
     {
+        msg_Dbg(vd, "Super Resolution filter requested");
     // NVIDIA 530+ driver
     if (d3d_dev->adapterDesc.VendorId == GPU_MANUFACTURER_NVIDIA &&
         (d3d_dev->WDDM.revision * 10000 + d3d_dev->WDDM.build) > 153000)
     {
+        msg_Dbg(vd, "NVIDIA Super Resolution detected");
         constexpr GUID kNvidiaPPEInterfaceGUID{ 0xd43ce1b3, 0x1f4b, 0x48ac, {0xba, 0xee, 0xc3, 0xc2, 0x53, 0x75, 0xe6, 0xf7} };
         HRESULT hr;
         UINT available = 0;
@@ -88,9 +90,11 @@ d3d11_scaler *D3D11_UpscalerCreate(vlc_object_t *vd, d3d11_device_t *d3d_dev, vl
         ComPtr<ID3D11VideoProcessor>            processor;
 
         d3d11_device_lock(d3d_dev);
+        msg_Dbg(vd, "Querying ID3D11VideoContext");
         hr = d3d_dev->d3dcontext->QueryInterface(IID_GRAPHICS_PPV_ARGS(&d3dvidctx));
         if (unlikely(FAILED(hr)))
             goto checked;
+        msg_Dbg(vd, "Querying ID3D11VideoDevice");
         hr = d3d_dev->d3ddevice->QueryInterface(IID_GRAPHICS_PPV_ARGS(&d3dviddev));
         if (unlikely(FAILED(hr)))
             goto checked;
@@ -103,13 +107,16 @@ d3d11_scaler *D3D11_UpscalerCreate(vlc_object_t *vd, d3d11_device_t *d3d_dev, vl
         processorDesc.OutputHeight = 1080;
         processorDesc.OutputFrameRate = { 1, 25 };
         processorDesc.Usage = D3D11_VIDEO_USAGE_PLAYBACK_NORMAL;
+        msg_Dbg(vd, "ID3D11VideoDevice->CreateVideoProcessorEnumerator");
         hr = d3dviddev->CreateVideoProcessorEnumerator(&processorDesc, &enumerator);
         if (unlikely(FAILED(hr)))
             goto checked;
+        msg_Dbg(vd, "ID3D11VideoDevice->CreateVideoProcessor");
         hr = d3dviddev->CreateVideoProcessor(enumerator.Get(), 0, &processor);
         if (unlikely(FAILED(hr)))
             goto checked;
 
+        msg_Dbg(vd, "ID3D11VideoContext->VideoProcessorGetStreamExtension");
         hr = d3dvidctx->VideoProcessorGetStreamExtension(processor.Get(),
                     0, &kNvidiaPPEInterfaceGUID, sizeof(available), &available);
 checked:
-- 
2.49.0.windows.1

