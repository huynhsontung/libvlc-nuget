From f0574f9cedb6d20ca9dfa0a180e675cd1c3d4722 Mon Sep 17 00:00:00 2001
From: Tung Huynh <tung75605@gmail.com>
Date: Sat, 23 Dec 2023 00:33:39 -0800
Subject: [PATCH 1/4] direct3d11: fix get display desc for WINSTORE

---
 modules/video_output/win32/direct3d11.c | 55 +++++++++++++++++++++++++
 1 file changed, 55 insertions(+)

diff --git a/modules/video_output/win32/direct3d11.c b/modules/video_output/win32/direct3d11.c
index 8d1f7cb3..52f61c00 100644
--- a/modules/video_output/win32/direct3d11.c
+++ b/modules/video_output/win32/direct3d11.c
@@ -1298,8 +1298,36 @@ static bool canHandleConversion(const dxgi_color_space *src, const dxgi_color_sp
         return true; /* we can handle anything to 709 */
     return false; /* let Windows do the rest */
 }
+
+static bool TryGetFirstOutputDesc(vout_display_t *vd, DXGI_OUTPUT_DESC1 *desc) {
+    vout_display_sys_t *sys = vd->sys;
+    IDXGIAdapter *dxgiadapter = D3D11DeviceAdapter(sys->d3d_dev.d3ddevice);
+    if (unlikely(dxgiadapter==NULL)) {
+        msg_Err(vd, "Could not get the DXGI Adapter");
+        return false;
+    }
+
+    // Get the first output (monitor)
+    IDXGIOutput *output = NULL;
+    if (SUCCEEDED(IDXGIAdapter1_EnumOutputs(dxgiadapter, 0, &output))) {
+        IDXGIOutput6 *output6 = NULL;
+        if (SUCCEEDED(IDXGIOutput_QueryInterface(output, &IID_IDXGIOutput6, (void **)&output6))) {
+            if (SUCCEEDED(IDXGIOutput6_GetDesc1(output6, desc))) {
+                IDXGIOutput6_Release(output6);
+                IDXGIOutput_Release(output);
+                IDXGIAdapter_Release(dxgiadapter);
+                return true;
+            }
+            IDXGIOutput6_Release(output6);
+        }
+        IDXGIOutput_Release(output);
+    }
+    IDXGIAdapter_Release(dxgiadapter);
+    return false;
+}
 #endif
 
+
 static void D3D11SetColorSpace(vout_display_t *vd)
 {
     vout_display_sys_t *sys = vd->sys;
@@ -1370,7 +1398,9 @@ static void D3D11SetColorSpace(vout_display_t *vd)
     }
 
 #ifdef HAVE_DXGI1_6_H
+    DXGI_OUTPUT_DESC1 desc1;
     if (sys->hdrMode == hdr_Auto || sys->hdrMode == hdr_Fake) // match the screen
+#if !VLC_WINSTORE_APP
     if (SUCCEEDED(IDXGISwapChain_GetContainingOutput( sys->dxgiswapChain, &dxgiOutput )))
     {
         IDXGIOutput6 *dxgiOutput6 = NULL;
@@ -1402,6 +1432,31 @@ static void D3D11SetColorSpace(vout_display_t *vd)
         }
         IDXGIOutput_Release( dxgiOutput );
     }
+#else
+    // GetContainingOutput is not available for swap chain created with IDXGIFactory2::CreateSwapChainForComposition
+    // Workaround: get desc of the first output (display) instead
+    if (TryGetFirstOutputDesc(vd, &desc1))
+    {
+        const dxgi_color_space *csp = NULL;
+        for (int i=0; color_spaces[i].name; ++i)
+        {
+            if (color_spaces[i].dxgi == desc1.ColorSpace)
+            {
+                if (!canHandleConversion(&color_spaces[best], &color_spaces[i]))
+                    msg_Warn(vd, "Can't handle conversion to screen format %s", color_spaces[i].name);
+                else
+                {
+                    best = i;
+                    csp = &color_spaces[i];
+                }
+                break;
+            }
+        }
+
+        msg_Dbg(vd, "Output max luminance: %.1f, colorspace %s, bits per pixel %d", desc1.MaxFullFrameLuminance, csp?csp->name:"unknown", desc1.BitsPerColor);
+        //sys->display.luminance_peak = desc1.MaxFullFrameLuminance;
+    }
+#endif
 #endif
 
     hr = IDXGISwapChain3_SetColorSpace1(dxgiswapChain3, color_spaces[best].dxgi);
-- 
2.20.1

